$date
	Sat Feb 26 23:18:04 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! rd2 [31:0] $end
$var wire 32 " rd1 [31:0] $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$var reg 5 % rs1 [4:0] $end
$var reg 5 & rs2 [4:0] $end
$var reg 5 ' rw [4:0] $end
$var reg 32 ( rwd [31:0] $end
$var reg 1 ) write $end
$scope module registers $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 5 * rs1 [4:0] $end
$var wire 5 + rs2 [4:0] $end
$var wire 5 , rw [4:0] $end
$var wire 32 - rwd [31:0] $end
$var wire 1 ) write $end
$var wire 32 . rd2 [31:0] $end
$var wire 32 / rd1 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
bx *
0)
bx (
bx '
bx &
bx %
1$
0#
bx "
bx !
$end
#10
b1 !
b1 .
b1 "
b1 /
b11 &
b11 +
b11 %
b11 *
b11 '
b11 ,
b1 (
b1 -
1)
0$
1#
#20
b10001 !
b10001 .
b10001 &
b10001 +
b11001 '
b11001 ,
b0 (
b0 -
0#
#30
b11011 !
b11011 .
b11011 &
b11011 +
b11111 %
b11111 *
b11111 '
b11111 ,
b1 (
b1 -
1#
#40
b1 !
b1 .
b11011 "
b11011 /
b11 &
b11 +
b11011 %
b11011 *
b11011 '
b11011 ,
0#
#50
b10001 '
b10001 ,
b0 (
b0 -
1#
#60
0#
#70
1#
#80
0#
#90
1#
#100
0#
#110
1#
#120
0#
#130
1#
#140
0#
#150
1#
#160
0#
#170
1#
#180
0#
#190
1#
#200
0#
