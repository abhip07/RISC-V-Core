$date
	Sat Feb 26 23:03:45 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! write $end
$var wire 5 " rw [4:0] $end
$var wire 5 # rs2 [4:0] $end
$var wire 5 $ rs1 [4:0] $end
$var wire 7 % operation [6:0] $end
$var reg 32 & instruction [31:0] $end
$scope module decode_inst $end
$var wire 32 ' instruction [31:0] $end
$var reg 7 ( operation [6:0] $end
$var reg 5 ) rs1 [4:0] $end
$var reg 5 * rs2 [4:0] $end
$var reg 5 + rw [4:0] $end
$var reg 1 , type $end
$var reg 1 ! write $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0,
b10 +
b11 *
b100 )
b1000 (
b1001010010000011110000100001000 '
b1001010010000011110000100001000 &
b1000 %
b100 $
b11 #
b10 "
1!
$end
#10
b0 %
b0 (
b1001010010000011110000100000000 &
b1001010010000011110000100000000 '
#20
0!
1,
b1010 "
b1010 +
b101 $
b101 )
b1 %
b1 (
b10011010010100011011010100000001 &
b10011010010100011011010100000001 '
#30
1!
0,
b11100 "
b11100 +
b10010 #
b10010 *
b1101 $
b1101 )
b1010 %
b1010 (
b1111000110110010100111000001010 &
b1111000110110010100111000001010 '
#40
b10100 "
b10100 +
b0 #
b0 *
b11110 $
b11110 )
b1100 %
b1100 (
b10011111000000100101000001100 &
b10011111000000100101000001100 '
#50
0!
1,
b110 "
b110 +
b11010 #
b11010 *
b0 $
b0 )
b111 %
b111 (
b1001010000011010001001100000111 &
b1001010000011010001001100000111 '
#60
b11100 "
b11100 +
b10100 #
b10100 *
b100 $
b100 )
b110 %
b110 (
b10000010010100011111000000110 &
b10000010010100011111000000110 '
#70
1!
0,
b110 "
b110 +
b1 $
b1 )
b10 %
b10 (
b11100000000110100000001100000010 &
b11100000000110100000001100000010 '
